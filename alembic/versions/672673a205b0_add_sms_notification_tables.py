"""Add SMS notification tables

Revision ID: 672673a205b0
Revises: b539edce3e6c
Create Date: 2025-10-23 13:24:09.822783

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from api.models import JSONType


# revision identifiers, used by Alembic.
revision: str = '672673a205b0'
down_revision: Union[str, Sequence[str], None] = 'b539edce3e6c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sms_usage',
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('month_year', sa.String(length=7), nullable=False),
    sa.Column('assignment_count', sa.Integer(), nullable=False),
    sa.Column('reminder_count', sa.Integer(), nullable=False),
    sa.Column('broadcast_count', sa.Integer(), nullable=False),
    sa.Column('system_count', sa.Integer(), nullable=False),
    sa.Column('total_cost_cents', sa.Integer(), nullable=False),
    sa.Column('budget_limit_cents', sa.Integer(), nullable=False),
    sa.Column('alert_threshold_percent', sa.Integer(), nullable=False),
    sa.Column('alert_sent_at_80', sa.Boolean(), nullable=False),
    sa.Column('alert_sent_at_100', sa.Boolean(), nullable=False),
    sa.Column('auto_pause_enabled', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('organization_id', 'month_year')
    )
    op.create_index('idx_sms_usage_month', 'sms_usage', ['month_year'], unique=False)
    op.create_table('sms_preferences',
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=False),
    sa.Column('verified', sa.Boolean(), nullable=False),
    sa.Column('notification_types', JSONType(), nullable=False),
    sa.Column('opt_in_date', sa.DateTime(), nullable=True),
    sa.Column('opt_out_date', sa.DateTime(), nullable=True),
    sa.Column('language', sa.String(length=5), nullable=False),
    sa.Column('timezone', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['person_id'], ['people.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('person_id')
    )
    op.create_index('idx_sms_preferences_verified', 'sms_preferences', ['verified', 'opt_out_date'], unique=False)
    op.create_table('sms_templates',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('template_text', sa.Text(), nullable=False),
    sa.Column('message_type', sa.String(length=20), nullable=False),
    sa.Column('character_count', sa.Integer(), nullable=False),
    sa.Column('translations', JSONType(), nullable=False),
    sa.Column('is_system', sa.Boolean(), nullable=False),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['people.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_sms_templates_org_type', 'sms_templates', ['organization_id', 'message_type'], unique=False)
    op.create_index('idx_sms_templates_system', 'sms_templates', ['is_system'], unique=False)
    op.create_table('sms_verification_codes',
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=False),
    sa.Column('verification_code', sa.Integer(), nullable=False),
    sa.Column('attempts', sa.Integer(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['person_id'], ['people.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('person_id')
    )
    op.create_index('idx_sms_verification_expires', 'sms_verification_codes', ['expires_at'], unique=False)
    op.create_table('sms_messages',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('recipient_id', sa.Integer(), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=False),
    sa.Column('message_text', sa.Text(), nullable=False),
    sa.Column('message_type', sa.String(length=20), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('template_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('twilio_message_sid', sa.String(length=34), nullable=True),
    sa.Column('cost_cents', sa.Integer(), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('is_urgent', sa.Boolean(), nullable=False),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('delivered_at', sa.DateTime(), nullable=True),
    sa.Column('failed_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['recipient_id'], ['people.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['template_id'], ['sms_templates.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('twilio_message_sid')
    )
    op.create_index('idx_sms_messages_org_created', 'sms_messages', ['organization_id', 'created_at'], unique=False)
    op.create_index('idx_sms_messages_recipient_created', 'sms_messages', ['recipient_id', 'created_at'], unique=False)
    op.create_index('idx_sms_messages_status_created', 'sms_messages', ['status', 'created_at'], unique=False)
    op.create_index('idx_sms_messages_twilio_sid', 'sms_messages', ['twilio_message_sid'], unique=False)
    op.create_index('idx_sms_messages_type_created', 'sms_messages', ['message_type', 'created_at'], unique=False)
    op.create_table('sms_replies',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=False),
    sa.Column('message_text', sa.Text(), nullable=False),
    sa.Column('reply_type', sa.String(length=20), nullable=False),
    sa.Column('original_message_id', sa.Integer(), nullable=True),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('action_taken', sa.String(length=50), nullable=False),
    sa.Column('twilio_message_sid', sa.String(length=34), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['original_message_id'], ['sms_messages.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['person_id'], ['people.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('twilio_message_sid')
    )
    op.create_index('idx_sms_replies_person_created', 'sms_replies', ['person_id', 'created_at'], unique=False)
    op.create_index('idx_sms_replies_twilio_sid', 'sms_replies', ['twilio_message_sid'], unique=False)
    op.create_index('idx_sms_replies_type_created', 'sms_replies', ['reply_type', 'created_at'], unique=False)
    op.drop_index(op.f('idx_notifications_created_at'), table_name='notifications')
    op.drop_index(op.f('idx_notifications_event_id'), table_name='notifications')
    op.drop_index(op.f('idx_notifications_org_id'), table_name='notifications')
    op.drop_index(op.f('idx_notifications_recipient_id'), table_name='notifications')
    op.drop_index(op.f('idx_notifications_status'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_index(op.f('idx_delivery_logs_notification_id'), table_name='delivery_logs')
    op.drop_index(op.f('idx_delivery_logs_sendgrid_message_id'), table_name='delivery_logs')
    op.drop_index(op.f('idx_delivery_logs_timestamp'), table_name='delivery_logs')
    op.drop_table('delivery_logs')
    op.drop_index(op.f('idx_email_preferences_org_id'), table_name='email_preferences')
    op.drop_index(op.f('idx_email_preferences_person_id'), table_name='email_preferences')
    op.drop_table('email_preferences')
    op.drop_index(op.f('idx_recurring_series_active'), table_name='recurring_series')
    op.drop_index(op.f('idx_recurring_series_created_by'), table_name='recurring_series')
    op.drop_index(op.f('idx_recurring_series_org_id'), table_name='recurring_series')
    op.drop_index(op.f('idx_recurring_series_start_date'), table_name='recurring_series')
    op.drop_table('recurring_series')
    op.drop_index(op.f('idx_onboarding_progress_org_id'), table_name='onboarding_progress')
    op.drop_index(op.f('idx_onboarding_progress_person_id'), table_name='onboarding_progress')
    op.drop_table('onboarding_progress')
    op.drop_index(op.f('idx_recurrence_exceptions_occurrence_id'), table_name='recurrence_exceptions')
    op.drop_index(op.f('idx_recurrence_exceptions_series_id'), table_name='recurrence_exceptions')
    op.drop_table('recurrence_exceptions')
    op.drop_column('events', 'series_id')
    op.drop_column('events', 'is_sample')
    op.drop_column('events', 'occurrence_sequence')
    op.drop_column('events', 'is_exception')
    op.drop_column('people', 'is_sample')
    op.drop_column('teams', 'is_sample')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('teams', sa.Column('is_sample', sa.BOOLEAN(), nullable=False))
    op.add_column('people', sa.Column('is_sample', sa.BOOLEAN(), nullable=False))
    op.add_column('events', sa.Column('is_exception', sa.BOOLEAN(), server_default=sa.text('0'), nullable=False))
    op.add_column('events', sa.Column('occurrence_sequence', sa.INTEGER(), nullable=True))
    op.add_column('events', sa.Column('is_sample', sa.BOOLEAN(), nullable=False))
    op.add_column('events', sa.Column('series_id', sa.VARCHAR(), nullable=True))
    op.create_table('recurrence_exceptions',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('occurrence_id', sa.VARCHAR(), nullable=False),
    sa.Column('series_id', sa.VARCHAR(), nullable=False),
    sa.Column('exception_type', sa.VARCHAR(), nullable=False),
    sa.Column('original_title', sa.VARCHAR(), nullable=True),
    sa.Column('original_start_time', sa.DATETIME(), nullable=True),
    sa.Column('original_end_time', sa.DATETIME(), nullable=True),
    sa.Column('original_location', sa.VARCHAR(), nullable=True),
    sa.Column('custom_title', sa.VARCHAR(), nullable=True),
    sa.Column('custom_start_time', sa.DATETIME(), nullable=True),
    sa.Column('custom_end_time', sa.DATETIME(), nullable=True),
    sa.Column('custom_location', sa.VARCHAR(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['occurrence_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['series_id'], ['recurring_series.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('occurrence_id')
    )
    op.create_index(op.f('idx_recurrence_exceptions_series_id'), 'recurrence_exceptions', ['series_id'], unique=False)
    op.create_index(op.f('idx_recurrence_exceptions_occurrence_id'), 'recurrence_exceptions', ['occurrence_id'], unique=False)
    op.create_table('onboarding_progress',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('person_id', sa.VARCHAR(), nullable=False),
    sa.Column('org_id', sa.VARCHAR(), nullable=False),
    sa.Column('wizard_step_completed', sa.INTEGER(), nullable=True),
    sa.Column('wizard_data', sa.TEXT(), nullable=True),
    sa.Column('checklist_state', sa.TEXT(), nullable=True),
    sa.Column('tutorials_completed', sa.TEXT(), nullable=True),
    sa.Column('features_unlocked', sa.TEXT(), nullable=True),
    sa.Column('videos_watched', sa.TEXT(), nullable=True),
    sa.Column('onboarding_skipped', sa.BOOLEAN(), nullable=True),
    sa.Column('checklist_dismissed', sa.BOOLEAN(), nullable=True),
    sa.Column('tutorials_dismissed', sa.BOOLEAN(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['org_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['person_id'], ['people.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('person_id')
    )
    op.create_index(op.f('idx_onboarding_progress_person_id'), 'onboarding_progress', ['person_id'], unique=False)
    op.create_index(op.f('idx_onboarding_progress_org_id'), 'onboarding_progress', ['org_id'], unique=False)
    op.create_table('recurring_series',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('org_id', sa.VARCHAR(), nullable=False),
    sa.Column('created_by', sa.VARCHAR(), nullable=False),
    sa.Column('title', sa.VARCHAR(), nullable=False),
    sa.Column('duration', sa.INTEGER(), nullable=False),
    sa.Column('location', sa.VARCHAR(), nullable=True),
    sa.Column('role_requirements', sa.TEXT(), nullable=True),
    sa.Column('pattern_type', sa.VARCHAR(), nullable=False),
    sa.Column('frequency_interval', sa.INTEGER(), nullable=True),
    sa.Column('selected_days', sa.TEXT(), nullable=True),
    sa.Column('weekday_position', sa.VARCHAR(), nullable=True),
    sa.Column('weekday_name', sa.VARCHAR(), nullable=True),
    sa.Column('start_date', sa.DATE(), nullable=False),
    sa.Column('end_condition_type', sa.VARCHAR(), nullable=False),
    sa.Column('end_date', sa.DATE(), nullable=True),
    sa.Column('occurrence_count', sa.INTEGER(), nullable=True),
    sa.Column('active', sa.BOOLEAN(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['people.id'], ),
    sa.ForeignKeyConstraint(['org_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('idx_recurring_series_start_date'), 'recurring_series', ['start_date'], unique=False)
    op.create_index(op.f('idx_recurring_series_org_id'), 'recurring_series', ['org_id'], unique=False)
    op.create_index(op.f('idx_recurring_series_created_by'), 'recurring_series', ['created_by'], unique=False)
    op.create_index(op.f('idx_recurring_series_active'), 'recurring_series', ['active'], unique=False)
    op.create_table('email_preferences',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('person_id', sa.VARCHAR(), nullable=False),
    sa.Column('org_id', sa.VARCHAR(), nullable=False),
    sa.Column('frequency', sa.VARCHAR(), nullable=False),
    sa.Column('enabled_types', sa.TEXT(), nullable=False),
    sa.Column('language', sa.VARCHAR(), nullable=False),
    sa.Column('timezone', sa.VARCHAR(), nullable=False),
    sa.Column('digest_hour', sa.INTEGER(), nullable=False),
    sa.Column('unsubscribe_token', sa.VARCHAR(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['org_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['person_id'], ['people.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('person_id'),
    sa.UniqueConstraint('unsubscribe_token')
    )
    op.create_index(op.f('idx_email_preferences_person_id'), 'email_preferences', ['person_id'], unique=False)
    op.create_index(op.f('idx_email_preferences_org_id'), 'email_preferences', ['org_id'], unique=False)
    op.create_table('delivery_logs',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('notification_id', sa.INTEGER(), nullable=False),
    sa.Column('event_type', sa.VARCHAR(), nullable=False),
    sa.Column('sendgrid_message_id', sa.VARCHAR(), nullable=False),
    sa.Column('timestamp', sa.DATETIME(), nullable=False),
    sa.Column('reason', sa.TEXT(), nullable=True),
    sa.Column('raw_event', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['notification_id'], ['notifications.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('idx_delivery_logs_timestamp'), 'delivery_logs', ['timestamp'], unique=False)
    op.create_index(op.f('idx_delivery_logs_sendgrid_message_id'), 'delivery_logs', ['sendgrid_message_id'], unique=False)
    op.create_index(op.f('idx_delivery_logs_notification_id'), 'delivery_logs', ['notification_id'], unique=False)
    op.create_table('notifications',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('org_id', sa.VARCHAR(), nullable=False),
    sa.Column('recipient_id', sa.VARCHAR(), nullable=False),
    sa.Column('type', sa.VARCHAR(), nullable=False),
    sa.Column('status', sa.VARCHAR(), nullable=False),
    sa.Column('event_id', sa.VARCHAR(), nullable=True),
    sa.Column('template_data', sa.TEXT(), nullable=True),
    sa.Column('retry_count', sa.INTEGER(), nullable=False),
    sa.Column('sendgrid_message_id', sa.VARCHAR(), nullable=True),
    sa.Column('error_message', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('sent_at', sa.DATETIME(), nullable=True),
    sa.Column('delivered_at', sa.DATETIME(), nullable=True),
    sa.Column('opened_at', sa.DATETIME(), nullable=True),
    sa.Column('clicked_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['org_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['recipient_id'], ['people.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('sendgrid_message_id')
    )
    op.create_index(op.f('idx_notifications_status'), 'notifications', ['status'], unique=False)
    op.create_index(op.f('idx_notifications_recipient_id'), 'notifications', ['recipient_id'], unique=False)
    op.create_index(op.f('idx_notifications_org_id'), 'notifications', ['org_id'], unique=False)
    op.create_index(op.f('idx_notifications_event_id'), 'notifications', ['event_id'], unique=False)
    op.create_index(op.f('idx_notifications_created_at'), 'notifications', ['created_at'], unique=False)
    op.drop_index('idx_sms_replies_type_created', table_name='sms_replies')
    op.drop_index('idx_sms_replies_twilio_sid', table_name='sms_replies')
    op.drop_index('idx_sms_replies_person_created', table_name='sms_replies')
    op.drop_table('sms_replies')
    op.drop_index('idx_sms_messages_type_created', table_name='sms_messages')
    op.drop_index('idx_sms_messages_twilio_sid', table_name='sms_messages')
    op.drop_index('idx_sms_messages_status_created', table_name='sms_messages')
    op.drop_index('idx_sms_messages_recipient_created', table_name='sms_messages')
    op.drop_index('idx_sms_messages_org_created', table_name='sms_messages')
    op.drop_table('sms_messages')
    op.drop_index('idx_sms_verification_expires', table_name='sms_verification_codes')
    op.drop_table('sms_verification_codes')
    op.drop_index('idx_sms_templates_system', table_name='sms_templates')
    op.drop_index('idx_sms_templates_org_type', table_name='sms_templates')
    op.drop_table('sms_templates')
    op.drop_index('idx_sms_preferences_verified', table_name='sms_preferences')
    op.drop_table('sms_preferences')
    op.drop_index('idx_sms_usage_month', table_name='sms_usage')
    op.drop_table('sms_usage')
    # ### end Alembic commands ###
