# Docker Compose for SignUpFlow - DEVELOPMENT ENVIRONMENT
# Includes PostgreSQL, Redis, and API with hot-reload
# Usage: docker-compose -f docker-compose.dev.yml up

services:
  # ============================================================================
  # PostgreSQL Database (Development)
  # ============================================================================
  db:
    image: postgres:16-alpine
    container_name: signupflow-dev-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-signupflow_dev}
      POSTGRES_USER: ${POSTGRES_USER:-signupflow}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dev_password_change_in_production}
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=en_US.UTF-8"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./backups:/backups  # For database backups
    ports:
      - "${POSTGRES_PORT:-5433}:5432"  # Map to 5433 to avoid conflicts with local PostgreSQL
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-signupflow} -d ${POSTGRES_DB:-signupflow_dev}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - signupflow-dev-network

  # ============================================================================
  # Redis (for caching, rate limiting, sessions)
  # ============================================================================
  redis:
    image: redis:7-alpine
    container_name: signupflow-dev-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-dev_redis_password} --appendonly yes
    volumes:
      - redis_dev_data:/data
    ports:
      - "${REDIS_PORT:-6380}:6379"  # Map to 6380 to avoid conflicts with local Redis
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - signupflow-dev-network

  # ============================================================================
  # SignUpFlow FastAPI Backend (Development with Hot-Reload)
  # ============================================================================
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: signupflow-dev-api
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

    # ⭐ NEW: Load secrets from .env file
    env_file:
      - .env

    # ⭐ NEW: Minimal environment config - tells app which YAML profile to use
    environment:
      # Which environment profile to load (dev/test/prod)
      CONFIG_PROFILE: dev

      # Runtime overrides (secrets from .env, structure from config/env.dev.yaml)
      # These are the only values that should be here - everything else in YAML
      DATABASE_URL: postgresql://${POSTGRES_USER:-signupflow}:${POSTGRES_PASSWORD:-dev_password_change_in_production}@db:5432/${POSTGRES_DB:-signupflow_dev}
      REDIS_URL: redis://:${REDIS_PASSWORD:-dev_redis_password}@redis:6379/0

    ports:
      - "${PORT:-8000}:8000"
    volumes:
      # Hot-reload: Mount source code
      - ./api:/app/api
      - ./frontend:/app/frontend
      - ./locales:/app/locales
      - ./alembic:/app/alembic
      - ./alembic.ini:/app/alembic.ini
      - ./tests:/app/tests

      # ⭐ NEW: Mount YAML configuration profiles
      - ./config:/app/config:ro  # Read-only mount for security

      # Persistent data
      - ./data:/app/data
      - ./logs:/app/logs

      # Don't mount these (keep container versions)
      # - ./pyproject.toml:/app/pyproject.toml
      # - ./poetry.lock:/app/poetry.lock

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - signupflow-dev-network

    # Override CMD for development with auto-reload
    command: uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload --log-level debug

# ============================================================================
# Volumes (persistent data storage)
# ============================================================================
volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

# ============================================================================
# Networks
# ============================================================================
networks:
  signupflow-dev-network:
    driver: bridge
